## Actualización y Mantenimiento

## Actualizaciones Metadatos y control de versiones

Las actualizaciones se llevaran a cabo periódicamente mediante commits a los repositorios `bases-datos-dip` y `datos-abiertos-dip`. Al ser una base pública, la branch principal de `datos-abiertos-dip` se mantendrá bajo protección y solo podrá ser actualizada por pull-requests revisados y aprobados por el Equipo DIP antes de ser fusionados con la rama principal.

## Metadatos y control de versiones

Se llevará un registro de los metadatos de las bases de datos en formato `.yml`. A continuación, se muestra un ejemplo básico de metadata contenida en los repositorios

``` yaml
title: "Datos de Investigación de la Facultad de Ciencias Sociales"
creator: "Dirección de Investigación y Publicaciones, Facultad de Ciencias Sociales, Universidad de Chile"
date: "2025"
identifier: "TBD"
url: "https://github.com/facso-investigacion/bases-datos-dip"
description: >
  Esta propuesta tiene como objetivo desarrollar un sistema local e integrado de gestión y visualización de información científica
  en la Facultad de Ciencias Sociales. Este sistema permitirá consolidar, actualizar y utilizar estratégicamente los datos de los
  proyectos de investigación, garantizando que sean encontrables, accesibles, interoperables y reutilizables. Con ello, se busca 
  mejorar la transparencia, eficiencia y sostenibilidad en la gestión de la información científica de la Facultad.
subject: "Gestión de Información Científica"
format: 
 - ".csv"
 - ".rdata"
license: "TBD"
language: "es"
relationship:
  - type: "isPartOf"
    id: "https://github.com/facso-investigacion"
    description: "Parte de la Organización de la Dirección de Investigación en Github"
source: "Los datos fueron recopilados a partir de datos de SEPA-VID, ANID y FACSO"
contact:
  name: "Dirección de Investigación FACSO"
  email: "asistenteinvestigacion@facso.cl"
  phone: "+56 2 2978 9728"

# Historial de versiones -- Cambiar antes de cada commit.

versions: 
 - id: "0.1.0"
   last_updated: "2025-08-04"
   updated_by: "Gabriel Cortés"
   update_note: "Crea documento YAML para el almacenamiento interoperable de metadatos"
 - id: "0.2.0"
   last_updated: "2025-08-05"
   updated_by: "Gabriel Cortés"
   update_note: "Agrega postulaciones a proyectos FONDECYT 2026 de IR-FACSO"
```

Parte importante del registro de metadatos es que permite llevar un seguimiento exhaustivo, accesible e interoperable del historial de versiones de las bases de datos y repositorios. Se propone que se debe registrar, antes de cada commit, los siguientes campos:

1.  `id` Número de versión siguiendo el estándar `MAJOR.MINOR.PATCH`, esto es:

| Número | Descripción |
|----|----|
| MAJOR | Cambios que rompen compatibilidad con versiones anteriores |
| MINOR | Cabios que agregan funcionalidades o datos sin romper compatibilidad |
| PATCH | Correciones menores y ajustes cosméticos |

2. `last_updated`: fecha de modificación
3.  `updated_by`: Autor de la modificación.
4.  `update_note`: Comentario explicativo de los cambios.

## Ejemplo de flujo de trabajo para actualización y versionamiento

(LA idea es ir incorporando nuevos flujos a medidas a que vayamos viendo nuevas necesidades)

### Flujo para actualización y versionamiento de postulaciones FONDECYT

1.  Subir base RPI y planilla VID de patrocinios a `bases-datos-dip/input/data/original/`

2.  Correr el masterscript del repositorio (`bases-datos-dip/master-script.R`)

3.  Modificar información de la versión en la `bases-datos-dip/_metadata.yml`

4.  Hacer commit en la branch principal del repositorio `base-datos-dip` y hacer pull al repositorio en Github.

5.  Copiar las nuevas versiones de `bases-datos-dip/output/data-general-anon.csv` y `base-datos-dip/output/data-general.rdata` y reemplazar las bases en `datos-abiertos-dip/Base Integrada`

6.  Modificar información en `datos-abiertos-dip/Base Integrada/_metadata.yml`.

7.  Hacer commit en la branch `actualizaciones` y abrir un pull-request. El pull-request debe ser aceptado por... (**definir roles**)


## Solución de problemas

Si encuentras un error en el procesamiento de las bases datos, o tienes ideas, comentarios y sugerencias, estos deben comentarse en los `Issues` del repositorios correspondiente. 
